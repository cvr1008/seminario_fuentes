# CARGAR ccaa_consumo_antibioticos
c_c_final
# unir_consumo_autoconsumo <-
View(consumo_comunidades)
unir_consumo_autoconsumo <- inner_join(x = c_c_final, y = consumo_comunidades, by = consumo_comunidades)
unir_consumo_autoconsumo <- inner_join(x = c_c_final, y = consumo_comunidades, by = "consumo_comunidades")
unir_consumo_autoconsumo <- inner_join(x = consumo_comunidades, y = c_c_final, by = "consumo_comunidades")
consumo_comunidades <- antibioticos_sin_receta %>%
#filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)
consumo_comunidades
View(consumo_comunidades)
ggplot(consumo_comunidades, aes(x = "", y = porcentaje_automedicacion, fill = comunidades_autonomas)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Consumo de Antibióticos por Comunidad Autónoma",
fill = "Comunidad Autónoma") +
theme_void()  # Elimina el fondo y los ejes
unir_consumo_autoconsumo <- inner_join(x = consumo_comunidades, y = c_c_final, by = "consumo_comunidades")
unir_consumo_autoconsumo <- left_join(x = consumo_comunidades, y = c_c_final, by = "consumo_comunidades")
View(consumo_comunidades)
unir_consumo_autoconsumo <- left_join(consumo_comunidades, c_c_final, by = "consumo_comunidades")
unir_consumo_autoconsumo <- left_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
View(unir_consumo_autoconsumo)
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
View(unir_consumo_autoconsumo)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
View(unir_consumo_autoconsumo)
unir_consumo_autoconsumo <- left_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
View(unir_consumo_autoconsumo)
View(consumo)
View(consumo_comunidades)
View(consumo_comunidades)
consumo_comunidades <- antibioticos_sin_receta %>%
#filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas= case_when(comunidades_autonomas == "Total" ~ "Total País"))
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
# Leer el archivo .px
archivo_px <- read.px("INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
View(archivo_px)
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
head(df_px)
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
consumo_comunidades <- antibioticos_sin_receta %>%
#filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas= case_when(comunidades_autonomas == "Total" ~ "Total País"))
consumo_comunidades <- antibioticos_sin_receta %>%
#filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas= case_when(comunidades_autonomas == "Total" ~ "Total País"), TRUE ~comunidades_autonomas)
consumo_comunidades <- antibioticos_sin_receta %>%
#filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
unir_consumo_autoconsumo <- left_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
View(unir_consumo_autoconsumo)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
unir_consumo_autoconsumo <- left_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
unir_consumo_autoconsumo <- left_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
View(unir_consumo_autoconsumo)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
View(consumo)
View(consumo_comunidades)
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
View(unir_consumo_autoconsumo)
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate(porcentaje_automedicacion = total_consumo_ccaa * porcentaje_automedicacion/100)
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate(porcentaje_automedicacion = total_consumo_ccaa * porcentaje_automedicacion/100)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(total_consumo_ccaa:porcentaje_automedicacion)) %>%
mutate(Variable = factor(Variable, levels = c("total_consumo_ccaa","porcentaje_automedicacion")))
library(tidyr)
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate(porcentaje_automedicacion = total_consumo_ccaa * porcentaje_automedicacion/100)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(total_consumo_ccaa:porcentaje_automedicacion)) %>%
mutate(Variable = factor(Variable, levels = c("total_consumo_ccaa","porcentaje_automedicacion")))
View(unir_consumo_autoconsumo)
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = comunidades_autonomas)) +
geom_bar(position = "fill", stat = "identity")
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = comunidades_autonomas)) +
geom_bar(position = "stack", stat = "identity")
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity")
orange
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "orange",
"porcentaje_automedicacion" = "blue")) +
labs(x = "Comunidades Autónomas", y = "Valores")
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "green",
"porcentaje_automedicacion" = "red")) +
labs(x = "Comunidades Autónomas", y = "Valores")
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "lightgreen",
"porcentaje_automedicacion" = "red")) +
labs(x = "Comunidades Autónomas", y = "Valores")
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "lightgreen",
"porcentaje_automedicacion" = "tomato")) +
labs(x = "Comunidades Autónomas", y = "Valores")
library(tidyverse)
library(rjson)
library(dplyr)
library(tidyr)
library(ggplot2)
DDD_Europa_Json <- fromJSON(file = "INPUT/DATA/DDD_1000_habitantes_paises.JSON")
DDD_Europa_Json
# --------------------
DDD_Europa_df <- do.call(rbind, lapply(DDD_Europa_Json, function(x) {
data.frame(Country = x$Country,
DDD_per_1000_inhabitants_per_day = as.numeric(x$`DDD per 1000 inhabitants per day`))
}))
DDD_Europa_df <- DDD_Europa_df %>%
mutate(Country = case_when(
Country == "Slovakia" ~ "SK",
Country == "Belgium" ~ "BE",
Country == "Cyprus" ~ "CY",
Country == "Greece" ~ "EL",
Country == "Romania" ~ "RO",
Country == "Bulgaria" ~ "BG",
Country == "France" ~ "FR",
Country == "Malta" ~ "MT",
Country == "Poland" ~ "PL",
Country == "Spain" ~ "ES",
Country == "Ireland" ~ "IE",
Country == "Italy" ~ "IT",
Country == "Luxembourg" ~ "LU",
Country == "Portugal" ~ "PT",
Country == "Czechia" ~ "CZ",
Country == "Finland" ~ "FI",
Country == "Austria" ~ "AT",
Country == "Norway" ~ "DE",
Country == "Denmark" ~ "DK",
Country == "Estonia" ~ "EE",
Country == "Hungary" ~ "HU",
Country == "Croatia" ~ "HR",
Country == "Lithuania" ~ "LT",
Country == "Latvia" ~ "LV",
Country == "Netherlands" ~ "NL",
Country == "Iceland" ~ "SE",
Country == "Slovenia" ~ "SI",
))%>%
mutate(DDD_per_100_inhabitants_per_day = DDD_per_1000_inhabitants_per_day/10)%>%
select(-DDD_per_1000_inhabitants_per_day)
# al tratarse del número de dosis estándar consumidas diariamente por cada 1000 personas, se divide entre 10 para
# que sea número de dosis diarias por cada 100 habitantes.
# resumen: el x% de la población de cada país consume antibiótico de forma diaria en el sector
# hospitalario y comunitario.
grafico_DDD <- ggplot(DDD_Europa_df, aes(x = reorder(Country, -DDD_per_100_inhabitants_per_day),
y = DDD_per_100_inhabitants_per_day)) +
geom_bar(stat = "identity", fill = "turquoise") +
labs(title = "DDD por 100 habitantes por día en Europa",
x = "País",
y = "DDD por 100 habitantes por día") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grafico_DDD
library(readr)
library(readxl)
antibioticos_europa_ganaderia <- read_csv("INPUT/DATA/antibioticos_europa_ganaderia.csv")
View(antibioticos_europa_ganaderia)
antib <- antibioticos_europa_ganaderia%>%
mutate(Entity = case_when(
Entity == "Slovakia" ~ "SK",
Entity == "Belgium" ~ "BE",
Entity == "Cyprus" ~ "CY",
Entity == "Greece" ~ "EL",
Entity == "Romania" ~ "RO",
Entity == "Bulgaria" ~ "BG",
Entity == "France" ~ "FR",
Entity == "Malta" ~ "MT",
Entity == "Poland" ~ "PL",
Entity == "Spain" ~ "ES",
Entity == "Ireland" ~ "IE",
Entity == "Italy" ~ "IT",
Entity == "Luxembourg" ~ "LU",
Entity == "Portugal" ~ "PT",
Entity == "Czechia" ~ "CZ",
Entity == "Finland" ~ "FI",
Entity == "Austria" ~ "AT",
Entity == "Germany" ~ "DE",
Entity == "Denmark" ~ "DK",
Entity == "Estonia" ~ "EE",
Entity == "Hungary" ~ "HU",
Entity == "Croatia" ~ "HR",
Entity == "Lithuania" ~ "LT",
Entity == "Latvia" ~ "LV",
Entity == "Netherlands" ~ "NL",
Entity == "Sweden" ~ "SE",
Entity == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
select(-Code)%>%
filter(Year == "2015")%>%
rename(Country = Entity)
library(dplyr)
library(readr)
library(readxl)
library(dplyr)
antibioticos_europa_ganaderia <- read_csv("INPUT/DATA/antibioticos_europa_ganaderia.csv")
View(antibioticos_europa_ganaderia)
antib <- antibioticos_europa_ganaderia%>%
mutate(Entity = case_when(
Entity == "Slovakia" ~ "SK",
Entity == "Belgium" ~ "BE",
Entity == "Cyprus" ~ "CY",
Entity == "Greece" ~ "EL",
Entity == "Romania" ~ "RO",
Entity == "Bulgaria" ~ "BG",
Entity == "France" ~ "FR",
Entity == "Malta" ~ "MT",
Entity == "Poland" ~ "PL",
Entity == "Spain" ~ "ES",
Entity == "Ireland" ~ "IE",
Entity == "Italy" ~ "IT",
Entity == "Luxembourg" ~ "LU",
Entity == "Portugal" ~ "PT",
Entity == "Czechia" ~ "CZ",
Entity == "Finland" ~ "FI",
Entity == "Austria" ~ "AT",
Entity == "Germany" ~ "DE",
Entity == "Denmark" ~ "DK",
Entity == "Estonia" ~ "EE",
Entity == "Hungary" ~ "HU",
Entity == "Croatia" ~ "HR",
Entity == "Lithuania" ~ "LT",
Entity == "Latvia" ~ "LV",
Entity == "Netherlands" ~ "NL",
Entity == "Sweden" ~ "SE",
Entity == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
select(-Code)%>%
filter(Year == "2015")%>%
rename(Country = Entity)
library(readr)
library(readxl)
library(dplyr)
antibioticos_europa_ganaderia <- read_csv("INPUT/DATA/antibioticos_europa_ganaderia.csv")
View(antibioticos_europa_ganaderia)
antib <- antibioticos_europa_ganaderia%>%
mutate(Entity = case_when(
Entity == "Slovakia" ~ "SK",
Entity == "Belgium" ~ "BE",
Entity == "Cyprus" ~ "CY",
Entity == "Greece" ~ "EL",
Entity == "Romania" ~ "RO",
Entity == "Bulgaria" ~ "BG",
Entity == "France" ~ "FR",
Entity == "Malta" ~ "MT",
Entity == "Poland" ~ "PL",
Entity == "Spain" ~ "ES",
Entity == "Ireland" ~ "IE",
Entity == "Italy" ~ "IT",
Entity == "Luxembourg" ~ "LU",
Entity == "Portugal" ~ "PT",
Entity == "Czechia" ~ "CZ",
Entity == "Finland" ~ "FI",
Entity == "Austria" ~ "AT",
Entity == "Germany" ~ "DE",
Entity == "Denmark" ~ "DK",
Entity == "Estonia" ~ "EE",
Entity == "Hungary" ~ "HU",
Entity == "Croatia" ~ "HR",
Entity == "Lithuania" ~ "LT",
Entity == "Latvia" ~ "LV",
Entity == "Netherlands" ~ "NL",
Entity == "Sweden" ~ "SE",
Entity == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
select(-Code)%>%
filter(Year == "2015")%>%
rename(Country = Entity)
antib <- antibioticos_europa_ganaderia%>%
mutate(Entity = case_when(
Entity == "Slovakia" ~ "SK",
Entity == "Belgium" ~ "BE",
Entity == "Cyprus" ~ "CY",
Entity == "Greece" ~ "EL",
Entity == "Romania" ~ "RO",
Entity == "Bulgaria" ~ "BG",
Entity == "France" ~ "FR",
Entity == "Malta" ~ "MT",
Entity == "Poland" ~ "PL",
Entity == "Spain" ~ "ES",
Entity == "Ireland" ~ "IE",
Entity == "Italy" ~ "IT",
Entity == "Luxembourg" ~ "LU",
Entity == "Portugal" ~ "PT",
Entity == "Czechia" ~ "CZ",
Entity == "Finland" ~ "FI",
Entity == "Austria" ~ "AT",
Entity == "Germany" ~ "DE",
Entity == "Denmark" ~ "DK",
Entity == "Estonia" ~ "EE",
Entity == "Hungary" ~ "HU",
Entity == "Croatia" ~ "HR",
Entity == "Lithuania" ~ "LT",
Entity == "Latvia" ~ "LV",
Entity == "Netherlands" ~ "NL",
Entity == "Sweden" ~ "SE",
Entity == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
select(-Code)%>%
filter(Year == "2015")%>%
dplyr::rename(Country = Entity)
ant_europa_g <- read_excel("INPUT/DATA/consumo_ganaderia_2022.xlsx", skip = 3)
View(ant_europa_g)
a_e_g <- ant_europa_g %>%
select("Country", "...5")%>%
rename(Antibiotic_use_in_livestock_1000_PCU = `...5`)%>%
mutate(Year = "2022")%>%
mutate(Country = case_when(
Country == "Slovakia" ~ "SK",
Country == "Belgium" ~ "BE",
Country == "Cyprus" ~ "CY",
Country == "Greece" ~ "EL",
Country == "Romania" ~ "RO",
Country == "Bulgaria" ~ "BG",
Country == "France" ~ "FR",
Country == "Malta" ~ "MT",
Country == "Poland" ~ "PL",
Country == "Spain" ~ "ES",
Country == "Ireland" ~ "IE",
Country == "Italy" ~ "IT",
Country == "Luxembourg" ~ "LU",
Country == "Portugal" ~ "PT",
Country == "Czech Republic" ~ "CZ",
Country == "Finland" ~ "FI",
Country == "Austria" ~ "AT",
Country == "Germany" ~ "DE",
Country == "Denmark" ~ "DK",
Country == "Estonia" ~ "EE",
Country == "Hungary" ~ "HU",
Country == "Croatia" ~ "HR",
Country == "Lithuania" ~ "LT",
Country == "Latvia" ~ "LV",
Country == "Netherlands" ~ "NL",
Country == "Sweden" ~ "SE",
Country == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
relocate(3, .before = 2)
a_e_g <- ant_europa_g %>%
select("Country", "...5")%>%
dplyr::rename(Antibiotic_use_in_livestock_1000_PCU = `...5`)%>%
mutate(Year = "2022")%>%
mutate(Country = case_when(
Country == "Slovakia" ~ "SK",
Country == "Belgium" ~ "BE",
Country == "Cyprus" ~ "CY",
Country == "Greece" ~ "EL",
Country == "Romania" ~ "RO",
Country == "Bulgaria" ~ "BG",
Country == "France" ~ "FR",
Country == "Malta" ~ "MT",
Country == "Poland" ~ "PL",
Country == "Spain" ~ "ES",
Country == "Ireland" ~ "IE",
Country == "Italy" ~ "IT",
Country == "Luxembourg" ~ "LU",
Country == "Portugal" ~ "PT",
Country == "Czech Republic" ~ "CZ",
Country == "Finland" ~ "FI",
Country == "Austria" ~ "AT",
Country == "Germany" ~ "DE",
Country == "Denmark" ~ "DK",
Country == "Estonia" ~ "EE",
Country == "Hungary" ~ "HU",
Country == "Croatia" ~ "HR",
Country == "Lithuania" ~ "LT",
Country == "Latvia" ~ "LV",
Country == "Netherlands" ~ "NL",
Country == "Sweden" ~ "SE",
Country == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
relocate(3, .before = 2)
new <- a_e_g %>%
select(-Year)%>%
mutate(Antibiotic_use_in_livestock_100_PCU = as.numeric(Antibiotic_use_in_livestock_1000_PCU)/10)%>%
mutate(Antibiotic_day_livestock_100_PCU = Antibiotic_use_in_livestock_100_PCU/365)%>%
select(-Antibiotic_use_in_livestock_1000_PCU, -Antibiotic_use_in_livestock_100_PCU)
View(new)
View(new)
library(tidyverse)
library(rjson)
library(dplyr)
library(tidyr)
library(ggplot2)
DDD_Europa_Json <- fromJSON(file = "INPUT/DATA/DDD_1000_habitantes_paises.JSON")
DDD_Europa_Json
# --------------------
DDD_Europa_df <- do.call(rbind, lapply(DDD_Europa_Json, function(x) {
data.frame(Country = x$Country,
DDD_per_1000_inhabitants_per_day = as.numeric(x$`DDD per 1000 inhabitants per day`))
}))
DDD_Europa_df <- DDD_Europa_df %>%
mutate(Country = case_when(
Country == "Slovakia" ~ "SK",
Country == "Belgium" ~ "BE",
Country == "Cyprus" ~ "CY",
Country == "Greece" ~ "EL",
Country == "Romania" ~ "RO",
Country == "Bulgaria" ~ "BG",
Country == "France" ~ "FR",
Country == "Malta" ~ "MT",
Country == "Poland" ~ "PL",
Country == "Spain" ~ "ES",
Country == "Ireland" ~ "IE",
Country == "Italy" ~ "IT",
Country == "Luxembourg" ~ "LU",
Country == "Portugal" ~ "PT",
Country == "Czechia" ~ "CZ",
Country == "Finland" ~ "FI",
Country == "Austria" ~ "AT",
Country == "Norway" ~ "DE",
Country == "Denmark" ~ "DK",
Country == "Estonia" ~ "EE",
Country == "Hungary" ~ "HU",
Country == "Croatia" ~ "HR",
Country == "Lithuania" ~ "LT",
Country == "Latvia" ~ "LV",
Country == "Netherlands" ~ "NL",
Country == "Iceland" ~ "SE",
Country == "Slovenia" ~ "SI",
))%>%
mutate(DDD_per_100_inhabitants_per_day = DDD_per_1000_inhabitants_per_day/10)%>%
select(-DDD_per_1000_inhabitants_per_day)
# al tratarse del número de dosis estándar consumidas diariamente por cada 1000 personas, se divide entre 10 para
# que sea número de dosis diarias por cada 100 habitantes.
# resumen: el x% de la población de cada país consume antibiótico de forma diaria en el sector
# hospitalario y comunitario.
grafico_DDD <- ggplot(DDD_Europa_df, aes(x = reorder(Country, -DDD_per_100_inhabitants_per_day),
y = DDD_per_100_inhabitants_per_day)) +
geom_bar(stat = "identity", fill = "turquoise") +
labs(title = "DDD por 100 habitantes por día en Europa",
x = "País",
y = "DDD por 100 habitantes por día") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grafico_DDD
View(DDD_Europa_df)
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")
View(paises_consumo_ab_sectores)
View(ant_europa_g)
