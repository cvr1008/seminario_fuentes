antib <- antibioticos_europa_ganaderia%>%
dlpyr::mutate(Entity = case_when(
Entity == "Slovakia" ~ "SK",
Entity == "Belgium" ~ "BE",
Entity == "Cyprus" ~ "CY",
Entity == "Greece" ~ "EL",
Entity == "Romania" ~ "RO",
Entity == "Bulgaria" ~ "BG",
Entity == "France" ~ "FR",
Entity == "Malta" ~ "MT",
Entity == "Poland" ~ "PL",
Entity == "Spain" ~ "ES",
Entity == "Ireland" ~ "IE",
Entity == "Italy" ~ "IT",
Entity == "Luxembourg" ~ "LU",
Entity == "Portugal" ~ "PT",
Entity == "Czechia" ~ "CZ",
Entity == "Finland" ~ "FI",
Entity == "Austria" ~ "AT",
Entity == "Germany" ~ "DE",
Entity == "Denmark" ~ "DK",
Entity == "Estonia" ~ "EE",
Entity == "Hungary" ~ "HU",
Entity == "Croatia" ~ "HR",
Entity == "Lithuania" ~ "LT",
Entity == "Latvia" ~ "LV",
Entity == "Netherlands" ~ "NL",
Entity == "Sweden" ~ "SE",
Entity == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
dlpyr::select(-Code)%>%
dlpyr::filter(Year == "2015")%>%
dlpyr::rename(Country = Entity)
antib <- antibioticos_europa_ganaderia%>%
dplyr::mutate(Entity = case_when(
Entity == "Slovakia" ~ "SK",
Entity == "Belgium" ~ "BE",
Entity == "Cyprus" ~ "CY",
Entity == "Greece" ~ "EL",
Entity == "Romania" ~ "RO",
Entity == "Bulgaria" ~ "BG",
Entity == "France" ~ "FR",
Entity == "Malta" ~ "MT",
Entity == "Poland" ~ "PL",
Entity == "Spain" ~ "ES",
Entity == "Ireland" ~ "IE",
Entity == "Italy" ~ "IT",
Entity == "Luxembourg" ~ "LU",
Entity == "Portugal" ~ "PT",
Entity == "Czechia" ~ "CZ",
Entity == "Finland" ~ "FI",
Entity == "Austria" ~ "AT",
Entity == "Germany" ~ "DE",
Entity == "Denmark" ~ "DK",
Entity == "Estonia" ~ "EE",
Entity == "Hungary" ~ "HU",
Entity == "Croatia" ~ "HR",
Entity == "Lithuania" ~ "LT",
Entity == "Latvia" ~ "LV",
Entity == "Netherlands" ~ "NL",
Entity == "Sweden" ~ "SE",
Entity == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
dplyr::select(-Code)%>%
dplyr::filter(Year == "2015")%>%
dplyr::rename(Country = Entity)
new <- a_e_g %>%
dplyr::select(-Year)%>%
dplyr::mutate(Antibiotic_use_in_livestock_100_PCU = as.numeric(Antibiotic_use_in_livestock_1000_PCU)/10)%>%
dplyr::mutate(Antibiotic_day_livestock_100_PCU = Antibiotic_use_in_livestock_100_PCU/365)%>%
dplyr::select(-Antibiotic_use_in_livestock_1000_PCU, -Antibiotic_use_in_livestock_100_PCU)
ant_europa_g <- read_excel("INPUT/DATA/consumo_ganaderia_2022.xlsx", skip = 3)
a_e_g <- ant_europa_g %>%
dplyr::select("Country", "...5")%>%
dplyr::rename(Antibiotic_use_in_livestock_1000_PCU = `...5`)%>%
dplyr::mutate(Year = "2022")%>%
dplyr::mutate(Country = case_when(
Country == "Slovakia" ~ "SK",
Country == "Belgium" ~ "BE",
Country == "Cyprus" ~ "CY",
Country == "Greece" ~ "EL",
Country == "Romania" ~ "RO",
Country == "Bulgaria" ~ "BG",
Country == "France" ~ "FR",
Country == "Malta" ~ "MT",
Country == "Poland" ~ "PL",
Country == "Spain" ~ "ES",
Country == "Ireland" ~ "IE",
Country == "Italy" ~ "IT",
Country == "Luxembourg" ~ "LU",
Country == "Portugal" ~ "PT",
Country == "Czech Republic" ~ "CZ",
Country == "Finland" ~ "FI",
Country == "Austria" ~ "AT",
Country == "Germany" ~ "DE",
Country == "Denmark" ~ "DK",
Country == "Estonia" ~ "EE",
Country == "Hungary" ~ "HU",
Country == "Croatia" ~ "HR",
Country == "Lithuania" ~ "LT",
Country == "Latvia" ~ "LV",
Country == "Netherlands" ~ "NL",
Country == "Sweden" ~ "SE",
Country == "Slovenia" ~ "SI",
))%>%
drop_na()%>%
dplyr::relocate(3, .before = 2)
new <- a_e_g %>%
dplyr::select(-Year)%>%
dplyr::mutate(Antibiotic_use_in_livestock_100_PCU = as.numeric(Antibiotic_use_in_livestock_1000_PCU)/10)%>%
dplyr::mutate(Antibiotic_day_livestock_100_PCU = Antibiotic_use_in_livestock_100_PCU/365)%>%
dplyr::select(-Antibiotic_use_in_livestock_1000_PCU, -Antibiotic_use_in_livestock_100_PCU)
View(new)
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")
positivos_resist_sectores<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
rename(porcentaje_posit_animales = media)%>%
rename(porcentaje_posit_personas = mean_value_region)
positivos_resist_sectores<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region)
positivos_animales # positivo animales resistencia antibiotico
media_region # positivo personas resistencia antibiotico
View(positivos_resist_sectores)
View(media_ganaderia)
library(readr)
library(dplyr)
library(ggplot2)
#--------------------------------
# "INPUT/DATA/datos_pib.tsv"
pibPP <- read_table("INPUT/DATA/datos_pib.tsv")
View(pibPP)
str(pibPP)
# Cambio de nombre columna
colnames(pibPP)[1] <- "pais"
# Nos quedamos con las últimas letras
pibPP$pais <- substr(pibPP$pais, nchar(pibPP$pais) - 1, nchar(pibPP$pais))
View(pibPP)
lista_pais <- list("BE", "BG", "CZ", "DK", "DE", "EE", "IE", "EL", "ES", "FR", "HR", "IT", "CY", "LV", "LT", "LU", "HU", "MT", "NL",
"AT", "PL", "PT", "RO", "SI", "SK", "FI", "SE")
# nos quedamos solo con los países de la UE
pib <- pibPP %>% filter(pais %in% unlist(lista_pais))
View(pib)
# quitar la columna nula
pib <- pib[, colSums(is.na(pib)) < nrow(pib)]
pib
pib_2022 <- pib %>% select(pais, `2022`)
View(pib_2022)
# ggplot del pib en el 2022 (primero lo ponemos en descendente)
pib_2022_desc <- pib_2022 %>% arrange(desc(`2022`))
# sustituir las etiquetas de los países
pib_2022_desc <- pib_2022_desc %>%
mutate(pais = case_when(
pais == "SK" ~ "Eslovaquia",
pais == "SI" ~ "Slovenia",
pais == "EE" ~ "Estonia",
pais == "MT" ~ "Malta",
pais == "LV" ~ "Latvia",
pais == "HR" ~ "Croatia",
pais == "EL" ~ "Greece",
pais == "BG" ~ "Bulgaria",
TRUE ~ pais # Mantiene los nombres que no están en la lista
))
# Crear el gráfico de barras
grafico_pib <- ggplot(pib_2022_desc, aes(x = reorder(pais, -`2022`), y = `2022`)) +
geom_bar(stat = "identity", fill = "gold") +
labs(x = "País", y = "Valor en 2022", title = "PIB por País en 2022") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotar etiquetas para mejor legibilidad
grafico_pib
View(pib)
View(pib_2022_desc)
View(positivos_resist_sectores)
positivos_resist_sectores<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region) %>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(porcentaje_posit_personas:porcentaje_posit_animales)) %>%
mutate(Variable = factor(Variable, levels = c("porcentaje_posit_personas","porcentaje_posit_animales")))
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")
library(ggplot2)
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(fill=Variable,x=RegionCode)) +
geom_bar( position = "fill", stat = "identity")
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(fill=Variable,y= Valores,x=RegionCode)) +
geom_bar( position = "fill", stat = "identity")
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variables), position = "dodge", stat = "identity")
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")
positivos_resist_sectores<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region) %>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(porcentaje_posit_personas:porcentaje_posit_animales)) %>%
mutate(Variable = factor(Variable, levels = c("porcentaje_posit_personas","porcentaje_posit_animales"))) %>%
filter(Valores!=0.00)
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
labs(title='Media por paises de positivos en animales y en personas',
x='Paises',
fill='Medias')
# Crear el gráfico de barras
grafico_pib <- ggplot(pib_2022_desc, aes(x = reorder(pais, -`2022`), y = `2022`)) +
geom_bar(stat = "identity", fill = "gold") +
labs(x = "País", y = "Valor en 2022", title = "PIB por País en 2022") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotar etiquetas para mejor legibilidad
grafico_pib
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
labs(title='Media por paises de positivos en animales y en personas',
x='Paises',
fill='Medias')+
scale_fill_manual(values = c("porcentaje_posit_personas" = "lightgreen",
"porcentaje_posit_animales" = "red"))
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
labs(title='Media por paises de positivos en animales y en personas',
x='Paises',
fill='Medias')+
scale_fill_manual(values = c("porcentaje_posit_personas" = "lightgreen",
"porcentaje_posit_animales" = "tomato"))
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
labs(title='Media por paises de positivos en animales y en personas',
x='Paises',
fill='Medias')+
scale_fill_manual(values = c("porcentaje_posit_personas" = 'lavender',
"porcentaje_posit_animales" = "pink"))
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
labs(title='Media por paises de positivos en animales y en personas',
x='Paises',
fill='Medias')+
scale_fill_manual(values = c("porcentaje_posit_personas" = 'violet',
"porcentaje_posit_animales" = "blue"))
ggplot(data = tabla_unida, aes(x = Valores, y = Codigo)) +
geom_bar(aes(fill = zoonosis_name), position = "dodge", stat = "identity") +
facet_wrap(facets = vars(Variable), nrow = 1)
# Calcular la media basada en la proporción de positivos
media_ganaderia <- paises_UE_df %>%
group_by(Codigo, zoonosis_name) %>%
dplyr::summarise(
media = mean((MuestraPositiva / TotalMuestras)*100, na.rm = TRUE)
) %>%
ungroup()
media_ganaderia$media[is.nan(media_ganaderia$media)] <- 0
lista_codigos_paises <- list("AT", "BE", "BG", "CY", "CZ", "DE", "DK", "EE", "EL", "ES", "FI", "FR", "HR", "HU",
"IE", "IT", "LT", "LU", "LV", "MT", "NL", "PL", "PT", "RO", "SE", "SI", "SK")
otra <- otra %>%
dplyr::filter(RegionCode %in% lista_codigos_paises)
#Filtro solo las bacterias comunes y les cambio el nombre de las bacterias comunes
media_nueva<-otra %>%
filter(grupo %in% c("Ent", "Esc")) %>%
mutate(grupo = recode(grupo, "Ent" = "Enterococcus", "Esc" = "Escherichia"))
#Filtro las bacterias comunes
media_ganaderia_nueva<-media_ganaderia %>%
filter(zoonosis_name %in% c("Enterococcus,", "Escherichia")) %>%
mutate(zoonosis_name = recode(zoonosis_name, "Enterococcus," = "Enterococcus"))
table(factor(media_nueva$grupo))
#Hago un join usando de union el codigo y las bacterias comunes
library(tidyr)
tabla_unida <- full_join(x=media_ganaderia_nueva, y= media_nueva,
by = c("Codigo" = "RegionCode", "zoonosis_name" = "grupo")) %>%
rename(mediaGanaderia=media, mediaEnPoblacion=mean_value) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(mediaGanaderia:mediaEnPoblacion)) %>%
mutate(zoonosis_name = factor(zoonosis_name, levels = c("Escherichia","Enterococcus"))) %>%
mutate(Variable = factor(Variable, levels = c("mediaGanaderia","mediaEnPoblacion"))) %>%
drop_na()
tabla_unida <- full_join(x=media_ganaderia_nueva, y= media_nueva,
by = c("Codigo" = "RegionCode", "zoonosis_name" = "grupo")) %>%
dplyr::rename(mediaGanaderia=media, mediaEnPoblacion=mean_value) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(mediaGanaderia:mediaEnPoblacion)) %>%
mutate(zoonosis_name = factor(zoonosis_name, levels = c("Escherichia","Enterococcus"))) %>%
mutate(Variable = factor(Variable, levels = c("mediaGanaderia","mediaEnPoblacion"))) %>%
drop_na()
ggplot(data = tabla_unida, aes(x = Valores, y = Codigo)) +
geom_bar(aes(fill = zoonosis_name), position = "dodge", stat = "identity") +
facet_wrap(facets = vars(Variable), nrow = 1)
# Crear el gráfico de barras
grafico_pib <- ggplot(pib_2022_desc, aes(x = reorder(pais, -`2022`), y = `2022`)) +
geom_bar(stat = "identity", fill = "gold") +
labs(x = "País", y = "Valor en 2022", title = "PIB por País en 2022") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotar etiquetas para mejor legibilidad
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
labs(title='Media por paises de positivos en animales y en personas',
x='Paises',
fill='Medias')+
scale_fill_manual(values = c("porcentaje_posit_personas" = 'violet',
"porcentaje_posit_animales" = "blue"))
# Crear el gráfico de barras
grafico_pib <- ggplot(pib_2022_desc, aes(x = reorder(pais, -`2022`), y = `2022`)) +
geom_bar(stat = "identity", fill = "gold") +
labs(x = "País", y = "Valor en 2022", title = "PIB por País en 2022") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotar etiquetas para mejor legibilidad
grafico_pib
library(readr)
library(dplyr)
library(ggplot2)
#--------------------------------
# "INPUT/DATA/datos_pib.tsv"
pibPP <- read_table("INPUT/DATA/datos_pib.tsv")
View(pibPP)
str(pibPP)
# Cambio de nombre columna
colnames(pibPP)[1] <- "pais"
# Nos quedamos con las últimas letras
pibPP$pais <- substr(pibPP$pais, nchar(pibPP$pais) - 1, nchar(pibPP$pais))
View(pibPP)
lista_pais <- list("BE", "BG", "CZ", "DK", "DE", "EE", "IE", "EL", "ES", "FR", "HR", "IT", "CY", "LV", "LT", "LU", "HU", "MT", "NL",
"AT", "PL", "PT", "RO", "SI", "SK", "FI", "SE")
# nos quedamos solo con los países de la UE
pib <- pibPP %>% filter(pais %in% unlist(lista_pais))
View(pib)
# quitar la columna nula
pib <- pib[, colSums(is.na(pib)) < nrow(pib)]
pib
pib_2022 <- pib %>% select(pais, `2022`)
View(pib_2022)
# ggplot del pib en el 2022 (primero lo ponemos en descendente)
pib_2022_desc <- pib_2022 %>% arrange(desc(`2022`))
pib_2022_desc_gr <- pib_2022_desc %>%
mutate(pais = case_when(
pais == "SK" ~ "Eslovaquia",
pais == "SI" ~ "Slovenia",
pais == "EE" ~ "Estonia",
pais == "MT" ~ "Malta",
pais == "LV" ~ "Latvia",
pais == "HR" ~ "Croatia",
pais == "EL" ~ "Greece",
pais == "BG" ~ "Bulgaria",
TRUE ~ pais # Mantiene los nombres que no están en la lista
))
# Crear el gráfico de barras
grafico_pib <- ggplot(pib_2022_desc_gr, aes(x = reorder(pais, -`2022`), y = `2022`)) +
geom_bar(stat = "identity", fill = "gold") +
labs(x = "País", y = "Valor en 2022", title = "PIB por País en 2022") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotar etiquetas para mejor legibilidad
grafico_pib
View(positivos_resist_sectores)
positivos_PIB<-left_join(x=positivos_resist_sectores,y=pib_2022_desc,by='RegionCode'='pais')
positivos_PIB<-left_join(x=positivos_resist_sectores,y=pib_2022_desc,by=('RegionCode'='pais'))
positivos_PIB<-left_join(x= pib_2022_desc ,y=positivos_resist_sectores,by=('RegionCode'='pais'))
positivos_sinPivotar<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region)
positivos_PIB<-left_join(x= pib_2022_desc ,y=positivos_sinPivotar,by=('RegionCode'='pais'))
View(positivos_sinPivotar)
View(pib_2022_desc_gr)
View(pib_2022_desc)
positivos_PIB<-full_join(x= pib_2022_desc ,y=positivos_sinPivotar,by=('RegionCode'='pais'))
pib_2022_desc$pais
positivos_sinPivotar$RegionCode
str(pib_2022_desc$pais)
str(pib_2022_desc$pais==positivos_sinPivotar$RegionCode)
str(pib_2022_desc$pais==positivos_sinPivotar$RegionCode)
desc(pib_2022_desc$pais)
sort(pib_2022_desc$pais)
positivos_PIB<-full_join(y= sort(pib_2022_desc) ,x=positivos_sinPivotar,by=('RegionCode'='pais'))
pib_2022_desc<-sort(pib_2022_desc$pais)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=('RegionCode'='pais'))
pib_2022_desc <- pib_2022 %>% arrange(desc(`2022`))
summary(pib_2022_desc)
summary(positivos_sinPivotar)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais'))
positivos_PIB
View(positivos_PIB)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename('2022'=PIB)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(2022=PIB)
positivos_PIB
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename('2022'='PIB')
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename('2022'=PIB)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(PIB='2022')
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(PIB='2022') %>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(porcentaje_posit_personas:porcentaje_posit_animales)) %>%
mutate(Variable = factor(Variable, levels = c("porcentaje_posit_personas","porcentaje_posit_animales"))) %>%
filter(Valores!=0.00)
plot(x=PIB,y=Valores)
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(fill=Variable))
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(fill=Variable, color=Variable))
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(fill=Variable, color=Variable))+
geom_smooth()
?geom_smooth
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(fill=Variable, color=Variable))+
geom_smooth(method = 'lm')
# ** Gráfico de barras ----------------------------------------------------
data("diamonds")
# Preparación del gráfico
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
mpg
# Manipulando color y forma dentro de los puntos --> no muy útil
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = factor(cyl), shape = drv))
# como la variable `drv` tiene solo 3 niveles, podemos dividir el gráfico de acorde a ellas
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = factor(cyl))) +
facet_wrap(facets = vars(drv), nrow = 1)
# Podemos tener 5 variables en un gráfico!
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = factor(cyl))) +
#facet_wrap(class ~ drv)
facet_grid(class ~ drv, scales = "free", margins = TRUE) # Muestra la grilla con toda la combinación
# Controlando todas las etiquetas en una sola función
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
labs(
x = "Displacement (Litres)",
y = "Yield (miles / gallon)",
title = "Highway yield ",
subtitle = "cars"
)
# Controlando todas las etiquetas en una sola función (incluye títulos de leyendas)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = class, shape = factor(cyl))) +
labs(
x = "Displacement (Litres)",
y = "Yield (miles / gallon)",
title = "Highway yield",
subtitle = "cars",
colour = "Vehicle \n type",
shape = "Cylinders \n (Number)"
)
# Podemos ajustar modelos dependientes de cada nivel de la variable categórica
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = factor(cyl))) +
geom_smooth(method = "lm", aes(colour = factor(cyl)))
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=Variable))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))+
labs(title = 'Relación entre PIB y resistencia antimicrobiana',
y='positivos en AMR',
colour='grupos de positivos')
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))+
labs(title = 'Relación entre PIB y resistencia antimicrobiana',
y='positivos en AMR',
colour='poblaciones de positivos')
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(PIB='2022') %>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(porcentaje_posit_personas:porcentaje_posit_animales)) %>%
mutate(Variable = factor(Variable, levels = c("personas","animales"))) %>%
filter(Valores!=0.00)
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))+
labs(title = 'Relación entre PIB y resistencia antimicrobiana',
y='positivos en AMR',
colour='poblaciones de positivos')
View(positivos_PIB)
porcentaje_posit_personas
positivos_sinPivotar<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(PIB='2022') %>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(porcentaje_posit_personas:porcentaje_posit_animales)) %>%
mutate(Variable = factor(Variable, levels = c("porcentaje_posit_personas","porcentaje_posit_animales"))) %>%
filter(Valores!=0.00)
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))+
labs(title = 'Relación entre PIB y resistencia antimicrobiana',
y='positivos en AMR',
colour='poblaciones de positivos')
