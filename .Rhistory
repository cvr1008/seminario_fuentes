))%>%
mutate(DDD_per_100_inhabitants_per_day = DDD_per_1000_inhabitants_per_day/10)%>%
select(-DDD_per_1000_inhabitants_per_day)
# al tratarse del número de dosis estándar consumidas diariamente por cada 1000 personas, se divide entre 10 para
# que sea número de dosis diarias por cada 100 habitantes.
# resumen: el x% de la población de cada país consume antibiótico de forma diaria en el sector
# hospitalario y comunitario.
grafico_DDD <- ggplot(DDD_Europa_df, aes(x = reorder(Country, -DDD_per_1000_inhabitants_per_day),
y = DDD_per_1000_inhabitants_per_day)) +
geom_bar(stat = "identity", fill = "turquoise") +
labs(title = "DDD por 1000 habitantes por día en Europa",
x = "País",
y = "DDD por 1000 habitantes por día") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grafico_DDD
data.frame(Country = x$Country,
DDD_per_1000_inhabitants_per_day = as.numeric(x$`DDD per 1000 inhabitants per day`))
library(tidyverse)
library(rjson)
library(dplyr)
library(tidyr)
library(ggplot2)
DDD_Europa_Json <- fromJSON(file = "INPUT/DATA/DDD_1000_habitantes_paises.JSON")
DDD_Europa_Json
# --------------------
DDD_Europa_df <- do.call(rbind, lapply(DDD_Europa_Json, function(x) {
data.frame(Country = x$Country,
DDD_per_1000_inhabitants_per_day = as.numeric(x$`DDD per 1000 inhabitants per day`))
}))
DDD_Europa_df <- DDD_Europa_df %>%
mutate(Country = case_when(
Country == "Slovakia" ~ "SK",
Country == "Belgium" ~ "BE",
Country == "Cyprus" ~ "CY",
Country == "Greece" ~ "EL",
Country == "Romania" ~ "RO",
Country == "Bulgaria" ~ "BG",
Country == "France" ~ "FR",
Country == "Malta" ~ "MT",
Country == "Poland" ~ "PL",
Country == "Spain" ~ "ES",
Country == "Ireland" ~ "IE",
Country == "Italy" ~ "IT",
Country == "Luxembourg" ~ "LU",
Country == "Portugal" ~ "PT",
Country == "Czechia" ~ "CZ",
Country == "Finland" ~ "FI",
Country == "Austria" ~ "AT",
Country == "Norway" ~ "DE",
Country == "Denmark" ~ "DK",
Country == "Estonia" ~ "EE",
Country == "Hungary" ~ "HU",
Country == "Croatia" ~ "HR",
Country == "Lithuania" ~ "LT",
Country == "Latvia" ~ "LV",
Country == "Netherlands" ~ "NL",
Country == "Iceland" ~ "SE",
Country == "Slovenia" ~ "SI",
))%>%
mutate(DDD_per_100_inhabitants_per_day = DDD_per_1000_inhabitants_per_day/10)%>%
select(-DDD_per_1000_inhabitants_per_day)
View(DDD_Europa_df)
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")
View(paises_consumo_ab_sectores)
# Cargar las bibliotecas necesarias
library(dplyr)
library(readr)
library(ggplot2)
library(plotly)
# Cargar el archivo CSV de incidencia de enfermedades
Incidencia_enfermedades <-  read_csv("INPUT/DATA/ECDC_encuesta_AMR_incidencia_enfermedades.csv")
# Filtrar los datos para el año 2022 y las categorías Male y Female
incidencia_2022MF <- Incidencia_enfermedades %>%
filter(Time == 2022) %>%
filter(Category == 'Male' | Category == 'Female')
# Convertir 'Value' a numérico
incidencia_2022MF$Value <- as.numeric(incidencia_2022MF$Value)
# Crear el dataframe media_poblacion con una nueva columna 'grupo'
media_poblacion <- incidencia_2022MF %>%
select(-Unit, -HealthTopic, -Time, -Distribution) %>%
mutate(grupo = substr(Population, 1, 3))
lista_codigos_paises <- list("AT", "BE", "BG", "CY", "CZ", "DE", "DK", "EE", "EL", "ES", "FI", "FR", "HR", "HU",
"IE", "IT", "LT", "LU", "LV", "MT", "NL", "PL", "PT", "RO", "SE", "SI", "SK")
# Calcular la media de 'Value' por 'RegionCode' y 'grupo'
otra <- media_poblacion %>%
select(-Category, -CategoryIndex, -Population) %>%
arrange(RegionCode, grupo) %>%    # Ordena los datos
group_by(RegionCode, grupo) %>%   # Agrupa por RegionCode y grupo
summarise(mean_value = mean(Value, na.rm = TRUE))%>%
filter(RegionCode %in% lista_codigos_paises)  # Calcula la media en cada grupo y desagrupa
otra$mean_value[is.nan(otra$mean_value)] <- 0
media_region <- otra %>%
group_by(RegionCode) %>%
summarise(mean_value_region = mean(mean_value, na.rm = TRUE))
# --------------------------------------------------------------------
# gráficos
boxplot_in <- ggplot(otra, aes(x = grupo, y = mean_value)) +
geom_boxplot() +
labs(title = "Distribution of Mean Incidence by Bacteria Group",
x = "Bacteria Group", y = "Mean Incidence") +
theme_minimal()
# gráfico que te dice qué países tienen esa media para cada bacteria
# Crear el conjunto de datos interactivo con highlight_key
incidencia_keyed <- highlight_key(otra, ~RegionCode)
# Crear el gráfico ggplot con el texto configurado para el tooltip
scatter_plot <- ggplot(incidencia_keyed, aes(x = grupo, y = mean_value, color = RegionCode, text = paste("País:", RegionCode))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Population vs Mean Incidence Value by Region",
x = "Population", y = "Mean Incidence Value") +
theme_classic()
# Convertir el gráfico ggplot en un gráfico interactivo de plotly con highlight
interactive_scatter_plot <- ggplotly(scatter_plot, tooltip = "text") %>%
highlight(on = "plotly_click", off = "plotly_doubleclick", color = "red", opacityDim = 0.2)
# cuando haces click en un país te dice solo los puntitos de ese país, cuando haces dobleckick en otra parte del gráfico, se desaparece.
# Mostrar el gráfico interactivo
interactive_scatter_plot
View(media_region)
View(otra)
View(media_region)
grafico <- ggplot(media_region, aes(x = RegionCode, y = mean_value_region)) +
geom_bar(stat = "identity", fill = "skyblue", color = "blue") +
labs(
title = "Media de Incidencia por Región",
x = "País",
y = "Media de Incidencia"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Mostrar el gráfico
print(grafico)
media_region <- otra %>%
group_by(RegionCode) %>%
summarise(mean_value_region = mean(mean_value, na.rm = TRUE))%>%
arrange(desc(mean_value_region))
# Crear el gráfico con ggplot2
grafico <- ggplot(media_region, aes(x = RegionCode, y = mean_value_region)) +
geom_bar(stat = "identity", fill = "skyblue", color = "blue") +
labs(
title = "Media de Incidencia por Región",
x = "País",
y = "Media de Incidencia"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Mostrar el gráfico
print(grafico)
media_region <- otra %>%
group_by(RegionCode) %>%
summarise(mean_value_region = mean(mean_value, na.rm = TRUE))%>%
arrange(desc(mean_value_region))
# Crear el gráfico con ggplot2
grafico <- ggplot(media_region, aes(x = RegionCode, y = mean_value_region)) +
geom_bar(stat = "identity", fill = "skyblue", color = "blue") +
labs(
title = "Media de Incidencia por Región",
x = "País",
y = "Media de Incidencia"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Crear el gráfico con ggplot2
grafico <- ggplot(media_region, aes(x = RegionCode, y = -mean_value_region)) +
geom_bar(stat = "identity", fill = "skyblue", color = "blue") +
labs(
title = "Media de Incidencia por Región",
x = "País",
y = "Media de Incidencia"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Mostrar el gráfico
print(grafico)
# Crear el gráfico usando los datos ordenados
grafico <- ggplot(media_region_ordenada, aes(x = reorder(RegionCode, -mean_value_region), y = mean_value_region)) +
geom_bar(stat = "identity", fill = "skyblue", color = "blue") +
labs(
title = "Media de Incidencia por Región (Orden Descendente)",
x = "País",
y = "Media de Incidencia"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Crear el gráfico usando los datos ordenados
grafico <- ggplot(media_region, aes(x = reorder(RegionCode, -mean_value_region), y = mean_value_region)) +
geom_bar(stat = "identity", fill = "skyblue", color = "blue") +
labs(
title = "Media de Incidencia por Región (Orden Descendente)",
x = "País",
y = "Media de Incidencia"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Mostrar el gráfico
print(grafico)
library(readr)
library(dplyr)
library(ggplot2)
tipo_ccaa_consumo_o_no <- read_delim("INPUT/DATA/datos_ccaa/tipo_ccaa_consumo_o_no.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(tipo_ccaa_consumo_o_no)
typeof(tipo_ccaa_consumo_o_no)
class(tipo_ccaa_consumo_o_no)
antibioticos <- tipo_ccaa_consumo_o_no %>%
filter(`Tipo de medicamento` == "Antibióticos")
antibioticos <- tipo_ccaa_consumo_o_no[tipo_ccaa_consumo_o_no$`Tipo de medicamento` == "Antibióticos" & tipo_ccaa_consumo_o_no$`Sexo` == "Ambos sexos",]
antibioticos
View(antibioticos)
# Esta tabla enseña que el 3,54% de la población española en la última encuesta reconoce
# haber consumido antibióticos en las últimas 2 semanas (En el año 2021)
# Comunidad que más consume
antibioticos_si <- antibioticos[antibioticos$`Sí o no` == "Sí",]
antibioticos_si
View(antibioticos_si)
antibioticos_si$Total <- gsub(",", ".", antibioticos_si$Total)
# Limpia espacios y caracteres no numéricos (si es necesario)
antibioticos_si$Total <- gsub(" ", "", antibioticos_si$Total)
# Convierte a numérico
antibioticos_si$Total <- as.numeric(antibioticos_si$Total)
# Revisa si hay NA después de la conversión
sum(is.na(antibioticos_si$Total))  # Muestra el número de NAs
consumo_comunidades <- antibioticos_si %>%
group_by(`Comunidades y Ciudades Autónomas`) %>%
#summarise(Total_Consumo = sum(as.numeric(Total), na.rm = TRUE)) %>%
arrange(desc(Total))
consumo_comunidades
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))
c_c_final
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(`Comunidades y Ciudades Autónomas`, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(readr)
library(dplyr)
library(ggplot2)
tipo_ccaa_consumo_o_no <- read_delim("INPUT/DATA/datos_ccaa/tipo_ccaa_consumo_o_no.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
antibioticos <- tipo_ccaa_consumo_o_no %>%
filter(`Tipo de medicamento` == "Antibióticos")
antibioticos <- tipo_ccaa_consumo_o_no[tipo_ccaa_consumo_o_no$`Tipo de medicamento` == "Antibióticos" & tipo_ccaa_consumo_o_no$`Sexo` == "Ambos sexos",]
antibioticos
# Esta tabla enseña que el 3,54% de la población española en la última encuesta reconoce
# haber consumido antibióticos en las últimas 2 semanas (En el año 2021)
# Comunidad que más consume
antibioticos_si <- antibioticos[antibioticos$`Sí o no` == "Sí",]
antibioticos_si
antibioticos_si$Total <- gsub(",", ".", antibioticos_si$Total)
# Limpia espacios y caracteres no numéricos (si es necesario)
antibioticos_si$Total <- gsub(" ", "", antibioticos_si$Total)
# Convierte a numérico
antibioticos_si$Total <- as.numeric(antibioticos_si$Total)
# Revisa si hay NA después de la conversión
sum(is.na(antibioticos_si$Total))  # Muestra el número de NAs
consumo_comunidades <- antibioticos_si %>%
group_by(`Comunidades y Ciudades Autónomas`) %>%
#summarise(Total_Consumo = sum(as.numeric(Total), na.rm = TRUE)) %>%
arrange(desc(Total))
consumo_comunidades
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))
c_c_final
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(`Comunidades y Ciudades Autónomas`, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(antibioticos_si)
c_c_final
ggplot(c_c_final, aes(x = reorder(`Comunidades y Ciudades Autónomas`, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(c_c_final)
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
# Leer el archivo .px
archivo_px <- read.px("C:/Users/usuario/seminario_fuentes/INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
View(archivo_px)
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
head(df_px)
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
View(antibioticos_sin_receta)
antibioticos_sin_receta <- antibioticos_sin_receta %>%
filter(value != 0)
consumo_comunidades <- antibioticos_sin_receta %>%
group_by(`Comunidad.autónoma`) %>%
#summarise(Total_Consumo = sum(as.numeric(value), na.rm = TRUE)) %>%
arrange(desc(value))
consumo_comunidades
View(consumo_comunidades)
ggplot(consumo_comunidades, aes(x = "", y = value, fill = `Comunidad.autónoma`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Consumo de Antibióticos por Comunidad Autónoma",
fill = "Comunidad Autónoma") +
theme_void()  # Elimina el fondo y los ejes
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value))
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
rename(Comunidad_autónoma = `Comunidades y Ciudades Autónomas`)
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
rename(Comunidad_autonoma = `Comunidades y Ciudades Autónomas`)
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
rename(`Comunidades y Ciudades Autónomas` = Comunidad_autonoma)
library(readr)
library(dplyr)
library(ggplot2)
tipo_ccaa_consumo_o_no <- read_delim("INPUT/DATA/datos_ccaa/tipo_ccaa_consumo_o_no.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
antibioticos <- tipo_ccaa_consumo_o_no %>%
filter(`Tipo de medicamento` == "Antibióticos")
antibioticos <- tipo_ccaa_consumo_o_no[tipo_ccaa_consumo_o_no$`Tipo de medicamento` == "Antibióticos" & tipo_ccaa_consumo_o_no$`Sexo` == "Ambos sexos",]
antibioticos
# Esta tabla enseña que el 3,54% de la población española en la última encuesta reconoce
# haber consumido antibióticos en las últimas 2 semanas (En el año 2021)
# Comunidad que más consume
antibioticos_si <- antibioticos[antibioticos$`Sí o no` == "Sí",]
antibioticos_si
antibioticos_si$Total <- gsub(",", ".", antibioticos_si$Total)
# Limpia espacios y caracteres no numéricos (si es necesario)
antibioticos_si$Total <- gsub(" ", "", antibioticos_si$Total)
# Convierte a numérico
antibioticos_si$Total <- as.numeric(antibioticos_si$Total)
# Revisa si hay NA después de la conversión
sum(is.na(antibioticos_si$Total))  # Muestra el número de NAs
consumo_comunidades <- antibioticos_si %>%
group_by(`Comunidades y Ciudades Autónomas`) %>%
#summarise(Total_Consumo = sum(as.numeric(Total), na.rm = TRUE)) %>%
arrange(desc(Total))
consumo_comunidades
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
rename(`Comunidades y Ciudades Autónomas` = Comunidad_autonoma)
c_c_final <- consumo_comunidades %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
rename(Comunidad_autonoma = `Comunidades y Ciudades Autónomas`)
View(consumo_comunidades)
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
# Leer el archivo .px
archivo_px <- read.px("C:/Users/usuario/seminario_fuentes/INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
View(archivo_px)
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
head(df_px)
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
View(antibioticos_sin_receta)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)
View(consumo_comunidades)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
rename(comunidad_autonoma = Comunidad.autónoma)
library(readr)
library(dplyr)
library(ggplot2)
tipo_ccaa_consumo_o_no <- read_delim("INPUT/DATA/datos_ccaa/tipo_ccaa_consumo_o_no.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
antibioticos <- tipo_ccaa_consumo_o_no %>%
filter(`Tipo de medicamento` == "Antibióticos")
antibioticos <- tipo_ccaa_consumo_o_no[tipo_ccaa_consumo_o_no$`Tipo de medicamento` == "Antibióticos" & tipo_ccaa_consumo_o_no$`Sexo` == "Ambos sexos",]
antibioticos
# Esta tabla enseña que el 3,54% de la población española en la última encuesta reconoce
# haber consumido antibióticos en las últimas 2 semanas (En el año 2021)
# Comunidad que más consume
antibioticos_si <- antibioticos[antibioticos$`Sí o no` == "Sí",]
antibioticos_si
antibioticos_si$Total <- gsub(",", ".", antibioticos_si$Total)
# Limpia espacios y caracteres no numéricos (si es necesario)
antibioticos_si$Total <- gsub(" ", "", antibioticos_si$Total)
# Convierte a numérico
antibioticos_si$Total <- as.numeric(antibioticos_si$Total)
# Revisa si hay NA después de la conversión
sum(is.na(antibioticos_si$Total))  # Muestra el número de NAs
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
# Leer el archivo .px
archivo_px <- read.px("C:/Users/usuario/seminario_fuentes/INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
View(archivo_px)
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
head(df_px)
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
View(antibioticos_sin_receta)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
rename(comunidades_autonomas = Comunidad.autónoma)
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)
library(readr)
library(dplyr)
library(ggplot2)
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
rename(comunidades_autonomas = Comunidad.autónoma)
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
dplyr::rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)
consumo <- antibioticos_si %>%
group_by(`Comunidades y Ciudades Autónomas`) %>%
#summarise(Total_Consumo = sum(as.numeric(Total), na.rm = TRUE)) %>%
arrange(desc(Total))
consumo
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
dplyr::rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)
View(antibioticos_sin_receta)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)
consumo_comunidades
View(consumo_comunidades)
c_c_final
View(c_c_final)
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
dplyr::rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)%>%
select(comunidades_autonomas, Total)
c_c_final
View(c_c_final)
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
dplyr::rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)%>%
select(comunidades_autonomas, Total)%>%
dplyr::rename(total_consumo_ccaa = Total)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)
consumo_comunidades
View(consumo_comunidades)
