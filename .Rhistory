) +
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme_minimal() +
theme(
panel.grid.major = element_line(color = "gray80", size = 0.8),
panel.grid.minor = element_line(color = "gray90", size = 0.5),
panel.grid.major.x = element_line(linetype = "dotted"),
panel.grid.minor.x = element_blank(),
legend.position = "none",  # Sin leyenda
plot.margin = margin(10, 10, 10, 10)
)
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +
coord_flip() +
labs(x = "País", y = "Porcentaje de Resistencia") +
theme_minimal() +
theme(
legend.position = "right",
plot.margin = margin(10, 10, 10, 10)
)
# Combinar los dos gráficos en una disposición horizontal
plot_combinado <- graf_izq + graf_drch + plot_layout(ncol = 2)
# Crear el objeto interactivo con girafe
graficas_unidas <- girafe(ggobj = plot_combinado)
# Mostrar el gráfico interactivo
graficas_unidas
ggplot(paises_consumo_ab_sectores,aes(x=Dosis, y=Valor))+
geom_point(aes(color=factor(Consumo)))+
geom_smooth(method = 'lm',aes(colour=factor(Consumo)))+
labs(title = 'Relación entre el consumo de antibióticos y resistencia antimicrobiana',
y='Incidencia',
x= 'Consumo',
colour='Consumo en dosis')
texto <- readLines("C:/Users/usuario/Downloads/summary-33348801.txt")
library(tm)
library(wordcloud)
library(RColorBrewer)
texto <- readLines("C:/Users/usuario/Downloads/summary-33348801.txt")
wordcloud2(texto, size=1.6, color='random-dark')
install.packages("wordcloud2")
library(wordcloud2)
# Basic plot
wordcloud2(data=demoFreq, size=1.6)
# Basic plot
wordcloud2(data=texto, size=1.6)
texto <- readLines("C:/Users/usuario/Downloads/summary-33348801.txt")
# Basic plot
wordcloud2(data=texto, size=1.6)
texto <- readLines("C:/Users/usuario/Downloads/The burden of emerging antimicrobia.txt")
# Basic plot
wordcloud2(data=texto, size=1.6)
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
texto <- readLines("C:/Users/usuario/Downloads/The burden of emerging antimicrobia.txt")
cleanAbs <- tolower(gsub("[^[:alpha:]\\s]", "", texto))  # Elimina todo lo que no sea letra o espacio
# Crear la nube de palabras
wordcloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
library(wordcloud)
library(wordcloud)
cleanAbs <- tolower(gsub("[^[:alpha:]\\s]", "", texto))  # Elimina todo lo que no sea letra o espacio
# Crear la nube de palabras
wordcloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
# Crear la nube de palabras
wordcloud(cleanAbs, min.freq = 1, scale = c(2, 0.3))
library(PubMedWordcloud)
library(purrr) # Para map, si prefieres esta alternativa
library(readr)
# Vector con las rutas a los archivos de texto
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, ~ paste(readLines(.x), collapse = " "))
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
# Leer los contenidos de los archivos
#abstracts <- map_chr(rutas, ~ paste(readLines(.x), collapse = " "))
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
# Leer los contenidos de los archivos
#abstracts <- map_chr(rutas, ~ paste(readLines(.x), collapse = " "))
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
# Leer los contenidos de los archivos
#abstracts <- map_chr(rutas, ~ paste(readLines(.x), collapse = " "))
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, ~ paste(readLines(.x), collapse = " "))
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, ~ paste(readLines(.x), collapse = " "))
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
# Vector con las rutas a los archivos de texto
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
# Vector con las rutas a los archivos de texto
rutas <- c(
"C:/Users/usuario/Downloads/abstract-36963007.txt",
"C:/Users/usuario/Downloads/abstract-38217891.txt",
"C:/Users/usuario/Downloads/abstract-33348801.txt",
"C:/Users/usuario/Downloads/abstract-37353202.txt"
)
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
library(PubMedWordcloud)
library(purrr)
library(readr)
# Vector con las rutas a los archivos de texto
rutas <- c(
"INPUT/ARTICULOS/abstract-33348801.txt",
"INPUT/ARTICULOS/abstract-36963007.txt",
"INPUT/ARTICULOS/abstract-37353202.txt",
"INPUT/ARTICULOS/abstract-38217891.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
library(PubMedWordcloud)
library(purrr)
library(readr)
# Vector con las rutas a los archivos de texto
rutas <- c(
"INPUT/ARTICULOS/abstract-33348801.txt",
"INPUT/ARTICULOS/abstract-36963007.txt",
"INPUT/ARTICULOS/abstract-37353202.txt",
"INPUT/ARTICULOS/abstract-38217891.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
library(PubMedWordcloud)
library(purrr)
library(readr)
# Vector con las rutas a los archivos de texto
rutas <- c(
"INPUT/ARTICULOS/abstract-33348801.txt",
"INPUT/ARTICULOS/abstract-36963007.txt",
"INPUT/ARTICULOS/abstract-37353202.txt",
"INPUT/ARTICULOS/abstract-38217891.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
library(readr)
library(dplyr)
library(ggplot2)
tipo_ccaa_consumo_o_no <- read_delim("INPUT/DATA/datos_ccaa/tipo_ccaa_consumo_o_no.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
antibioticos <- tipo_ccaa_consumo_o_no %>%
filter(`Tipo de medicamento` == "Antibióticos")
antibioticos <- tipo_ccaa_consumo_o_no[tipo_ccaa_consumo_o_no$`Tipo de medicamento` == "Antibióticos" & tipo_ccaa_consumo_o_no$`Sexo` == "Ambos sexos",]
antibioticos
# Esta tabla enseña que el 3,54% de la población española en la última encuesta reconoce
# haber consumido antibióticos en las últimas 2 semanas (En el año 2021)
# Comunidad que más consume
antibioticos_si <- antibioticos[antibioticos$`Sí o no` == "Sí",]
antibioticos_si
antibioticos_si$Total <- gsub(",", ".", antibioticos_si$Total)
# Limpia espacios y caracteres no numéricos (si es necesario)
antibioticos_si$Total <- gsub(" ", "", antibioticos_si$Total)
# Convierte a numérico
antibioticos_si$Total <- as.numeric(antibioticos_si$Total)
# Revisa si hay NA después de la conversión
sum(is.na(antibioticos_si$Total))  # Muestra el número de NAs
consumo <- antibioticos_si %>%
group_by(`Comunidades y Ciudades Autónomas`) %>%
#summarise(Total_Consumo = sum(as.numeric(Total), na.rm = TRUE)) %>%
arrange(desc(Total))
consumo
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
dplyr::rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)%>%
select(comunidades_autonomas, Total)%>%
dplyr::rename(total_consumo_ccaa = Total)
c_c_final
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(comunidades_autonomas, -total_consumo_ccaa), y = total_consumo_ccaa)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(tidyr)
# Leer el archivo .px
archivo_px <- read.px("INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
View(archivo_px)
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
head(df_px)
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
View(antibioticos_sin_receta)
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
consumo_comunidades
View(consumo_comunidades)
ggplot(consumo_comunidades, aes(x = "", y = porcentaje_automedicacion, fill = comunidades_autonomas)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Consumo de Antibióticos por Comunidad Autónoma",
fill = "Comunidad Autónoma") +
theme_void()  # Elimina el fondo y los ejes
# CARGAR ccaa_consumo_antibioticos
c_c_final
consumo_comunidades
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate(porcentaje_automedicacion = total_consumo_ccaa * porcentaje_automedicacion/100)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(total_consumo_ccaa:porcentaje_automedicacion)) %>%
mutate(Variable = factor(Variable, levels = c("total_consumo_ccaa","porcentaje_automedicacion")))
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "lightgreen",
"porcentaje_automedicacion" = "tomato")) +
labs(x = "Comunidades Autónomas", y = "Valores")
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(tidyr)
# Leer el archivo .px
archivo_px <- read.px("INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
View(archivo_px)
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
consumo_comunidades
ggplot(consumo_comunidades, aes(x = "", y = porcentaje_automedicacion, fill = comunidades_autonomas)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Consumo de Antibióticos por Comunidad Autónoma",
fill = "Comunidad Autónoma") +
theme_void()  # Elimina el fondo y los ejes
# CARGAR ccaa_consumo_antibioticos
c_c_final
consumo_comunidades
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate(porcentaje_automedicacion = total_consumo_ccaa * porcentaje_automedicacion/100)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(total_consumo_ccaa:porcentaje_automedicacion)) %>%
mutate(Variable = factor(Variable, levels = c("total_consumo_ccaa","porcentaje_automedicacion")))
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "lightgreen",
"porcentaje_automedicacion" = "tomato")) +
labs(x = "Comunidades Autónomas", y = "Valores")
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(tidyr)
# Leer el archivo .px
archivo_px <- read.px("INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
consumo_comunidades
ggplot(consumo_comunidades, aes(x = "", y = porcentaje_automedicacion, fill = comunidades_autonomas)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Consumo de Antibióticos por Comunidad Autónoma",
fill = "Comunidad Autónoma") +
theme_void()  # Elimina el fondo y los ejes
# CARGAR ccaa_consumo_antibioticos
c_c_final
consumo_comunidades
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate(porcentaje_automedicacion = total_consumo_ccaa * porcentaje_automedicacion/100)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(total_consumo_ccaa:porcentaje_automedicacion)) %>%
mutate(Variable = factor(Variable, levels = c("total_consumo_ccaa","porcentaje_automedicacion")))
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "lightgreen",
"porcentaje_automedicacion" = "tomato")) +
labs(x = "Comunidades Autónomas", y = "Valores")
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(tidyr)
# Leer el archivo .px
archivo_px <- read.px("INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename(porcentaje_automedicacion = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
consumo_comunidades
ggplot(consumo_comunidades, aes(x = "", y = porcentaje_automedicacion, fill = comunidades_autonomas)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Consumo de Antibióticos por Comunidad Autónoma",
fill = "Comunidad Autónoma") +
theme_void()  # Elimina el fondo y los ejes
# CARGAR ccaa_consumo_antibioticos
c_c_final
consumo_comunidades
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate(porcentaje_automedicacion = total_consumo_ccaa * porcentaje_automedicacion/100)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(total_consumo_ccaa:porcentaje_automedicacion)) %>%
mutate(Variable = factor(Variable, levels = c("total_consumo_ccaa","porcentaje_automedicacion")))
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("total_consumo_ccaa" = "lightgreen",
"porcentaje_automedicacion" = "tomato")) +
labs(x = "Comunidades Autónomas", y = "Valores")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(unir_consumo_autoconsumo)
View(consumo)
library(pxR)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(tidyr)
# Leer el archivo .px
archivo_px <- read.px("INPUT/DATA/datos_ccaa/tipo_ccaa_recetado_o_no.px")
df_px <- as.data.frame(archivo_px)
# Ver las primeras filas
# quedarme solo con los antibióticos
antibiotic <- df_px[df_px[["Tipo.de.medicamento"]] == "Antibióticos" & df_px$`Sexo` == "Ambos sexos", ]
antibiotic
# qué comunidad autónoma se automedica más
antibioticos_sin_receta <- antibiotic[antibiotic$`Recetado` == "No recetado",]
antibioticos_sin_receta
consumo_comunidades <- antibioticos_sin_receta %>%
filter(value != 0)%>%
group_by(`Comunidad.autónoma`) %>%
arrange(desc(value)) %>%
select(Comunidad.autónoma, value)%>%
dplyr::rename(comunidades_autonomas = Comunidad.autónoma)%>%
dplyr::rename("Automedicación (%)" = value)%>%
dplyr::mutate(comunidades_autonomas = case_when(
comunidades_autonomas == "Total" ~ "Total País",
TRUE ~ comunidades_autonomas
))
consumo_comunidades
ggplot(consumo_comunidades, aes(x = "", y = "Automedicación (%)", fill = comunidades_autonomas)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Consumo de Antibióticos por Comunidad Autónoma",
fill = "Comunidad Autónoma") +
theme_void()  # Elimina el fondo y los ejes
# CARGAR ccaa_consumo_antibioticos
c_c_final
consumo_comunidades
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate("Automedicación (%)" = total_consumo_ccaa * "Automedicación (%)"/100)%>%
dplyr::rename("Consumo total" = total_consumo_ccaa)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c("Consumo total":"Automedicación (%)")) %>%
mutate(Variable = factor(Variable, levels = c("Consumo total","Automedicación (%)")))
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate("Automedicación (%)" = total_consumo_ccaa * 'Automedicación (%)'/100)%>%
dplyr::rename("Consumo total" = total_consumo_ccaa)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c("Consumo total":"Automedicación (%)")) %>%
mutate(Variable = factor(Variable, levels = c("Consumo total","Automedicación (%)")))
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate("Automedicación (%)" = total_consumo_ccaa * ('Automedicación (%)')/100)%>%
dplyr::rename("Consumo total" = total_consumo_ccaa)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c("Consumo total":"Automedicación (%)")) %>%
mutate(Variable = factor(Variable, levels = c("Consumo total","Automedicación (%)")))
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")
unir_consumo_autoconsumo <- inner_join(c_c_final, consumo_comunidades, by = "comunidades_autonomas")%>%
mutate("Automedicación (%)" = total_consumo_ccaa * `Automedicación (%)`/100)%>%
dplyr::rename("Consumo total" = total_consumo_ccaa)%>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c("Consumo total":"Automedicación (%)")) %>%
mutate(Variable = factor(Variable, levels = c("Consumo total","Automedicación (%)")))
ggplot(unir_consumo_autoconsumo, aes(fill = Variable, y = Valores, x = reorder(comunidades_autonomas, -Valores))) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("Consumo total" = "lightgreen",
"Automedicación (%)" = "tomato")) +
labs(x = "Comunidades Autónomas", y = "Porcentaje de Consumo")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
