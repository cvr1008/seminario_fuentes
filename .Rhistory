dplyr::rename("100 habitantes (mg)" = DDD_per_100_inhabitants_per_year,
"1000 PCU (mg)" = Antibiotic_use_in_livestock_100_PCU, "Valor" = mean_value_region)%>%
pivot_longer(names_to = "Consumo", values_to = "Dosis", cols= c(2:3))
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)%>%
left_join(x = ., y = media_region, by = c("Country" = "RegionCode"))%>%
group_by(Country, mean_value_region)%>%
dplyr::rename("100 habitantes (mg)" = DDD_per_100_inhabitants_per_year,
"1000 PCU (mg)" = Antibiotic_use_in_livestock_100_PCU, "Valor" = mean_value_region)
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)%>%
left_join(x = ., y = media_region, by = c("Country" = "RegionCode"))
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)%>%
left_join(x = ., y = media_region, by = c("Country" = "RegionCode"))%>%
group_by(Country, mean_value_region)%>%
dplyr::rename("100 habitantes (mg)" = DDD_per_100_inhabitants_per_year,
"1000 PCU (mg)" = Antibiotic_use_in_livestock_100_PCU, "Valor" = mean_value_region)
#UNION FINAL CON GRÁFICO
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)%>%
left_join(x = ., y = media_region, by = c("Country" = "RegionCode"))%>%
group_by(Country, mean_value_region)%>%
dplyr::rename("100 habitantes (mg)" = DDD_per_100_inhabitants_per_year,
"1000 PCU (mg)" = Antibiotic_use_in_livestock_100_PCU, "Valor" = mean_value_region)%>%
pivot_longer(names_to = "Consumo", values_to = "Dosis", cols= c(3:4))
ggplot(paises_consumo_ab_sectores,aes(x=Dosis, y=Valor))+
geom_point(aes(color=factor(Consumo)))+
geom_smooth(method = 'lm',aes(colour=factor(Consumo)))+
labs(title = 'Relación entre el consumo de antibióticos y resistencia antimicrobiana',
y='Incidencia',
x= 'Consumo',
colour='Consumo en dosis')
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)%>%
left_join(x = ., y = media_region, by = c("Country" = "RegionCode"))%>%
group_by(Country, mean_value_region)%>%
dplyr::rename("100 habitantes (mg)" = DDD_per_100_inhabitants_per_year,
"1000 PCU (mg)" = Antibiotic_use_in_livestock_100_PCU, "Valor" = mean_value_region)
#UNION FINAL CON GRÁFICO
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)%>%
left_join(x = ., y = media_region, by = c("Country" = "RegionCode"))%>%
group_by(Country, mean_value_region)%>%
dplyr::rename("100 habitantes (mg)" = DDD_per_100_inhabitants_per_year,
"1000 PCU (mg)" = Antibiotic_use_in_livestock_100_PCU, "Valor" = mean_value_region)%>%
pivot_longer(names_to = "Consumo", values_to = "Dosis", cols= c('1000 PCU (mg)':"100 habitantes (mg)"))
ggplot(paises_consumo_ab_sectores,aes(x=Dosis, y=Valor))+
geom_point(aes(color=factor(Consumo)))+
geom_smooth(method = 'lm',aes(colour=factor(Consumo)))+
labs(title = 'Relación entre el consumo de antibióticos y resistencia antimicrobiana',
y='Incidencia',
x= 'Consumo',
colour='Consumo en dosis')
positivos_animales <- bacterias_personas%>%
group_by(RegionCode)%>%
dplyr::summarise(media = mean(mean_value, na.rm = TRUE))
# Calcular la media basada en la proporción de positivos
media_ganaderia <- paises_UE_df %>%
group_by(Codigo, zoonosis_name) %>%
dplyr::summarise(
media = mean((MuestraPositiva / TotalMuestras)*100, na.rm = TRUE)) %>%
ungroup() %>%
tidyr::drop_na()
load("C:/Users/deyan/fuentes/seminario_fuentes/OUTPUT/enviroment.RData")
# Calcular la media basada en la proporción de positivos
media_ganaderia <- paises_UE_df %>%
group_by(Codigo, zoonosis_name) %>%
dplyr::summarise(
media = mean((MuestraPositiva / TotalMuestras)*100, na.rm = TRUE)) %>%
ungroup() %>%
tidyr::drop_na()
#Filtro solo las bacterias comunes y les cambio el nombre de las bacterias comunes
bacterias_personas<-otra %>%
dplyr::filter(grupo %in% c("Enterococcus", "Escherichia"))
#Filtro las bacterias comunes
media_ganaderia_nueva<-media_ganaderia %>%
filter(zoonosis_name %in% c("Enterococcus,", "Escherichia")) %>%
mutate(zoonosis_name = recode(zoonosis_name, "Enterococcus," = "Enterococcus"))
tabla_unida <- full_join(x=media_ganaderia_nueva, y= bacterias_personas,
by = c("Codigo" = "RegionCode", "zoonosis_name" = "grupo")) %>%
dplyr::rename(Ganaderia=media, Poblacion=mean_value) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(Ganaderia:Poblacion)) %>%
mutate(Bacteria = factor(zoonosis_name, levels = c("Escherichia","Enterococcus"))) %>%
mutate(Variable = factor(Variable, levels = c("Ganaderia","Poblacion"))) %>%
tidyr::drop_na()
ggplot(data = tabla_unida, aes(x = Valores, y = Codigo)) +
geom_bar(aes(fill = Bacteria), position = "dodge", stat = "identity") +
facet_wrap(facets = vars(Variable), nrow = 1)+
labs(x = "Porcentaje de incidencia")
positivos_animales <- bacterias_personas%>%
group_by(RegionCode)%>%
dplyr::summarise(media = mean(mean_value, na.rm = TRUE))
# aquí vamos a unir las tablas para sacar: similitudes de bacterias entre ganadería
# y la incidencia total (se usa el df otra)
# necesita que se cargue el archivo EU_ddd y EU_Incidencia_enfermedades
library(ggplot2)
library(dplyr)
library(tidyr)
# Respuestas para la pregunta tres, Consumo y resistencia en sectores específicos en la UE.
DDD_Europa_df # consumo personas antibiótico
new # consumo ganadería antibiótico
#UNION FINAL CON GRÁFICO
paises_consumo_ab_sectores<-left_join(x = DDD_Europa_df, y = new, by = "Country")%>%
mutate(DDD_per_100_inhabitants_per_year = DDD_per_100_inhabitants_per_day*365/100*100)%>%
mutate(Antibiotic_use_in_livestock_1000_PCU = Antibiotic_use_in_livestock_100_PCU*10)%>%
dplyr::select(-DDD_per_100_inhabitants_per_day)%>%
left_join(x = ., y = media_region, by = c("Country" = "RegionCode"))%>%
group_by(Country, mean_value_region)%>%
dplyr::rename("100 habitantes (mg)" = DDD_per_100_inhabitants_per_year,
"1000 PCU (mg)" = Antibiotic_use_in_livestock_100_PCU, "Valor" = mean_value_region)%>%
pivot_longer(names_to = "Consumo", values_to = "Dosis", cols= c('1000 PCU (mg)':"100 habitantes (mg)"))
ggplot(paises_consumo_ab_sectores,aes(x=Dosis, y=Valor))+
geom_point(aes(color=factor(Consumo)))+
geom_smooth(method = 'lm',aes(colour=factor(Consumo)))+
labs(title = 'Relación entre el consumo de antibióticos y resistencia antimicrobiana',
y='Incidencia',
x= 'Consumo',
colour='Consumo en dosis')
positivos_animales <- bacterias_personas%>%
group_by(RegionCode)%>%
dplyr::summarise(media = mean(mean_value, na.rm = TRUE))
positivos_resist_sectores<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region) %>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(porcentaje_posit_personas:porcentaje_posit_animales)) %>%
mutate(Variable = factor(Variable, levels = c("porcentaje_posit_personas","porcentaje_posit_animales"))) %>%
filter(Valores!=0.00)
#GRAFICA DE BARRAS DE ENTRE MEDIA DE POSITIVOS EN ANIMALES Y PERSONAS
ggplot(data = positivos_resist_sectores, aes(y = Valores, x = RegionCode)) +
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
labs(title='Media por paises de positivos en animales y en personas',
x='Paises',
fill='Medias')+
scale_fill_manual(values = c("porcentaje_posit_personas" = 'violet',
"porcentaje_posit_animales" = "blue"))
positivos_animales # positivo animales resistencia antibiotico
media_region # positivo personas resistencia antibiotico
# aquí separado por bacterias para unirlo con las bacterias de la ganadería para ver si hay coincidencias
# las bacterias son las que provocan que se dé positivo en resistencia
otra
pib_2022_desc
positivos_sinPivotar<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(PIB='2022') %>%
dplyr::rename(Animales=porcentaje_posit_animales, Personas = porcentaje_posit_personas)%>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(Personas:Animales)) %>%
mutate(Variable = factor(Variable, levels = c("Personas","Animales"))) %>%
filter(Valores!=0.00)
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))+
labs(title = 'Relación entre PIB y resistencia antimicrobiana',
y='positivos en AMR',
colour='poblaciones de positivos')
graf_izq<-ggplot(positivos_PIB, aes(PIB, Valores, tooltip = Valores, data_id = Variable)) +
geom_point_interactive(size = 2)+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))
graf_drch<-ggplot(positivos_PIB, aes(x=RegionCode, y=Valores, tooltip=RegionCode, data_id=RegionCode))+
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
geom_col_interactive()+
coord_flip()
plot_combinado <- graf_izq + graf_drch + plot_layout(ncol = 2)
graficas_unidas <- girafe(ggobj = plot_combinado)
graficas_unidas
# Gráfico de dispersión interactivo (izquierda)
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores, tooltip = RegionCode, data_id = RegionCode)) +
geom_point_interactive(aes(color = Variable), size = 3) +  # Puntos interactivos
geom_smooth(method = "lm", aes(color = Variable), se = TRUE) +  # Líneas de tendencia
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "none")
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas
coord_flip() +  # Invertir los ejes para barras horizontales
labs(title = "Porcentaje de Resistencia por País", x = "País", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "right")
#--------------------------------------------------------------------------------------------------------------
# Gráfico de dispersión interactivo (izquierda)
graf_izq <- ggplot(positivos_PIB_2, aes(x = PIB, y = Valores, tooltip = RegionCode, data_id = RegionCode)) +
geom_point_interactive(aes(color = Variable), size = 2) +  # Puntos interactivos con color por variable
geom_smooth(method = "lm",aes(color=Variable) , se = TRUE) +  # Líneas de tendencia
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
#theme_minimal() +
theme(legend.position = "none",  # Eliminar la leyenda en el gráfico de dispersión
plot.margin = margin(10, 10, 10, 10))  # Ajuste de márgenes
graf_izq<-ggplot(positivos_PIB, aes(PIB, Valores, tooltip = Valores, data_id = Variable)) +
geom_point_interactive(size = 2)+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))
graf_drch<-ggplot(positivos_PIB, aes(x=RegionCode, y=Valores, tooltip=RegionCode, data_id=RegionCode))+
geom_bar(aes(fill = Variable), position = "dodge", stat = "identity")+
geom_col_interactive()+
coord_flip()
plot_combinado <- graf_izq + graf_drch + plot_layout(ncol = 2)
graficas_unidas <- girafe(ggobj = plot_combinado)
graficas_unidas
# Gráfico de dispersión interactivo (izquierda)
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores, tooltip = RegionCode, data_id = RegionCode)) +
geom_point_interactive(aes(color = Variable), size = 3) +  # Puntos interactivos
geom_smooth(method = "lm", aes(color = Variable), se = TRUE) +  # Líneas de tendencia
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "none")
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas
coord_flip() +  # Invertir los ejes para barras horizontales
labs(title = "Porcentaje de Resistencia por País", x = "País", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "right")
# Combinar los dos gráficos en una disposición horizontal
plot_combinado <- graf_izq + graf_drch + plot_layout(ncol = 2)
# Crear el objeto interactivo con girafe
graficas_unidas <- girafe(ggobj = plot_combinado)
# Mostrar el gráfico interactivo
graficas_unidas
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores, tooltip = RegionCode, data_id = RegionCode)) +
geom_point_interactive(aes(color = Variable), size = 3) +  # Puntos interactivos
geom_smooth(method = "lm", aes(color = Variable), se = TRUE) +  # Líneas de tendencia
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "none")
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas
coord_flip() +  # Invertir los ejes para barras horizontales
labs(title = "Porcentaje de Resistencia por País", x = "País", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "right")
# Combinar los dos gráficos en una disposición horizontal
plot_combinado <- graf_izq + graf_drch + plot_layout(ncol = 2)
# Crear el objeto interactivo con girafe
graficas_unidas <- girafe(ggobj = plot_combinado)
# Mostrar el gráfico interactivo
graficas_unidas
library(ggplot2)
library(ggiraph)
library(patchwork)
# Gráfico de dispersión interactivo (izquierda)
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores)) +
geom_point_interactive(aes(color = Variable, tooltip = RegionCode, data_id = RegionCode), size = 0.5) +
geom_smooth(aes(color = Variable), method = "lm", se = TRUE) +
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme(legend.position = "none", plot.margin = margin(10, 10, 10, 10))
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas por variable
coord_flip() +  # Invertir los ejes para barras horizontales
labs(x = "País", y = "Porcentaje de Resistencia") +
#theme_minimal() +
theme(legend.position = "right",  # Mostrar la leyenda solo en el gráfico de barras
plot.margin = margin(10, 10, 10, 10))  # Ajuste de márgenes
# Combinar los dos gráficos en una disposición horizontal
graficas_unidas <- girafe(ggobj = graf_izq + graf_drch + plot_layout(ncol = 2))
# Mostrar el gráfico interactivo
graficas_unidas
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores)) +
geom_point_interactive(aes(color = Variable, tooltip = RegionCode, data_id = RegionCode), size = 1) +
geom_smooth(aes(color = Variable), method = "lm", se = TRUE) +
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme(legend.position = "none", plot.margin = margin(10, 10, 10, 10))
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas por variable
coord_flip() +  # Invertir los ejes para barras horizontales
labs(x = "País", y = "Porcentaje de Resistencia") +
#theme_minimal() +
theme(legend.position = "right",  # Mostrar la leyenda solo en el gráfico de barras
plot.margin = margin(10, 10, 10, 10))  # Ajuste de márgenes
graficas_unidas <- girafe(ggobj = graf_izq + graf_drch + plot_layout(ncol = 2))
# Mostrar el gráfico interactivo
graficas_unidas
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores)) +
geom_point_interactive(aes(color = Variable, tooltip = RegionCode, data_id = RegionCode), size = 2) +
geom_smooth(aes(color = Variable), method = "lm", se = TRUE) +
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme(legend.position = "none", plot.margin = margin(10, 10, 10, 10))
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas por variable
coord_flip() +  # Invertir los ejes para barras horizontales
labs(x = "País", y = "Porcentaje de Resistencia") +
#theme_minimal() +
theme(legend.position = "right",  # Mostrar la leyenda solo en el gráfico de barras
plot.margin = margin(10, 10, 10, 10))  # Ajuste de márgenes
graficas_unidas <- girafe(ggobj = graf_izq + graf_drch + plot_layout(ncol = 2))
# Mostrar el gráfico interactivo
graficas_unidas
# Gráfico de dispersión interactivo (izquierda)
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores, tooltip = RegionCode, data_id = RegionCode)) +
geom_point_interactive(aes(color = Variable), size = 3) +  # Puntos interactivos
geom_smooth(method = "lm", aes(color = Variable), se = TRUE) +  # Líneas de tendencia
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "none")
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas
coord_flip() +  # Invertir los ejes para barras horizontales
labs(title = "Porcentaje de Resistencia por País", x = "País", y = "Porcentaje de Resistencia") +
theme_minimal()+
theme(legend.position = "right")
# Combinar los dos gráficos en una disposición horizontal
plot_combinado <- graf_izq + graf_drch + plot_layout(ncol = 2)
# Crear el objeto interactivo con girafe
graficas_unidas <- girafe(ggobj = plot_combinado)
# Mostrar el gráfico interactivo
graficas_unidas
library(ggplot2)
library(ggiraph)
library(patchwork)
# Gráfico de dispersión interactivo (izquierda)
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores)) +
geom_point_interactive(aes(color = Variable, tooltip = RegionCode, data_id = RegionCode), size = 1.5) +
geom_smooth(aes(color = Variable), method = "lm", se = TRUE) +
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme(legend.position = "none", plot.margin = margin(10, 10, 10, 10))
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = RegionCode, y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas por variable
coord_flip() +  # Invertir los ejes para barras horizontales
labs(x = "País", y = "Porcentaje de Resistencia") +
#theme_minimal() +
theme(legend.position = "right",  # Mostrar la leyenda solo en el gráfico de barras
plot.margin = margin(10, 10, 10, 10))  # Ajuste de márgenes
# Combinar los dos gráficos en una disposición horizontal
graficas_unidas <- girafe(ggobj = graf_izq + graf_drch + plot_layout(ncol = 2))
# Mostrar el gráfico interactivo
graficas_unidas
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(PIB='2022') %>%
dplyr::rename(Animales=porcentaje_posit_animales, Personas = porcentaje_posit_personas)%>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(Personas:Animales)) %>%
mutate(Variable = factor(Variable, levels = c("Personas","Animales"))) %>%
filter(Valores!=0.00)
ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))+
labs(title = 'Relación entre PIB y resistencia antimicrobiana',
y='positivos en AMR',
colour='poblaciones de positivos')
# Vector con las rutas a los archivos de texto
rutas <- c(
"INPUT/ARTICULOS/abstract-33348801.txt",
"INPUT/ARTICULOS/abstract-36963007.txt",
"INPUT/ARTICULOS/abstract-37353202.txt",
"INPUT/ARTICULOS/abstract-38217891.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
library(PubMedWordcloud)
library(purrr)
library(readr)
# Vector con las rutas a los archivos de texto
rutas <- c(
"INPUT/ARTICULOS/abstract-33348801.txt",
"INPUT/ARTICULOS/abstract-36963007.txt",
"INPUT/ARTICULOS/abstract-37353202.txt",
"INPUT/ARTICULOS/abstract-38217891.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
# Vector con las rutas a los archivos de texto
rutas <- c(
"INPUT/ARTICULOS/abstract-33348801.txt",
"INPUT/ARTICULOS/abstract-36963007.txt",
"INPUT/ARTICULOS/abstract-37353202.txt",
"INPUT/ARTICULOS/abstract-38217891.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
# Vector con las rutas a los archivos de texto
rutas <- c(
"INPUT/ARTICULOS/abstract-33348801.txt",
"INPUT/ARTICULOS/abstract-36963007.txt",
"INPUT/ARTICULOS/abstract-37353202.txt",
"INPUT/ARTICULOS/abstract-38217891.txt"
)
# Leer los contenidos de los archivos
abstracts <- map_chr(rutas, read_file)
# Limpiar los textos
cleanAbs <- cleanAbstracts(abstracts)
# Generar la nube de palabras
plotWordCloud(cleanAbs, min.freq = 2, scale = c(2, 0.3))
library(readr)
library(dplyr)
library(ggplot2)
tipo_ccaa_consumo_o_no <- read_delim("INPUT/DATA/datos_ccaa/tipo_ccaa_consumo_o_no.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
antibioticos <- tipo_ccaa_consumo_o_no %>%
dplyr::filter(`Tipo de medicamento` == "Antibióticos",`Sexo` == "Ambos sexos")%>%
dplyr::filter(`Sí o no` == "Sí")
# Esta tabla enseña que el 3,54% de la población española en la última encuesta reconoce
# haber consumido antibióticos en las últimas 2 semanas (En el año 2021)
antibioticos$Total <- gsub(",", ".", antibioticos$Total)
# Limpia espacios y caracteres no numéricos (si es necesario)
antibioticos$Total <- gsub(" ", "", antibioticos$Total)
# Convierte a numérico
antibioticos$Total <- as.numeric(antibioticos$Total)
# Revisa si hay NA después de la conversión
sum(is.na(antibioticos$Total))  # Muestra el número de NAs
consumo <- antibioticos %>%
group_by(`Comunidades y Ciudades Autónomas`) %>%
arrange(desc(Total))
consumo
c_c_final <- consumo %>%
mutate(`Comunidades y Ciudades Autónomas` = ifelse(is.na(`Comunidades y Ciudades Autónomas`), "Total País", `Comunidades y Ciudades Autónomas`))%>%
dplyr::rename(comunidades_autonomas = `Comunidades y Ciudades Autónomas`)%>%
select(comunidades_autonomas, Total)%>%
dplyr::rename(total_consumo_ccaa = Total)
c_c_final
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(comunidades_autonomas, -total_consumo_ccaa), y = total_consumo_ccaa)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(comunidades_autonomas, -total_consumo_ccaa), y = total_consumo_ccaa)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(comunidades_autonomas, -total_consumo_ccaa), y = total_consumo_ccaa)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(comunidades_autonomas, -total_consumo_ccaa), y = total_consumo_ccaa)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, hjust = 1))
# Crear el gráfico de barras
ggplot(c_c_final, aes(x = reorder(comunidades_autonomas, -total_consumo_ccaa), y = total_consumo_ccaa)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Comunidades Autónomas", y = "Total Consumo", title = "Consumo de antibióticos por Comunidad Autónoma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 70, hjust = 1))
# Gráfico de dispersión interactivo (izquierda)
graf_izq <- ggplot(positivos_PIB, aes(x = PIB, y = Valores)) +
geom_point_interactive(aes(color = Variable, tooltip = RegionCode, data_id = RegionCode), size = 1.5) +
geom_smooth(aes(color = Variable), method = "lm", se = TRUE) +
labs(title = "Relación entre PIB y Resistencia", x = "PIB", y = "Porcentaje de Resistencia") +
theme(legend.position = "none", plot.margin = margin(10, 10, 10, 10))
# Gráfico de barras interactivo (derecha)
graf_drch <- ggplot(positivos_PIB, aes(x = reorder(RegionCode, -Valores), y = Valores, tooltip = paste("País:", RegionCode, "<br>Valor:", Valores), data_id = RegionCode)) +
geom_col_interactive(aes(fill = Variable), position = "dodge") +  # Barras interactivas agrupadas por variable
coord_flip() +  # Invertir los ejes para barras horizontales
labs(x = "País", y = "Porcentaje de Resistencia") +
#theme_minimal() +
theme(legend.position = "right",  # Mostrar la leyenda solo en el gráfico de barras
plot.margin = margin(10, 10, 10, 10))  # Ajuste de márgenes
# Combinar los dos gráficos en una disposición horizontal
graficas_unidas <- girafe(ggobj = graf_izq + graf_drch + plot_layout(ncol = 2))
# Mostrar el gráfico interactivo
graficas_unidas
positivos_sinPivotar<-left_join(x = media_region, y = positivos_animales, by = "RegionCode")%>%
dplyr::rename(porcentaje_posit_animales = media)%>%
dplyr::rename(porcentaje_posit_personas = mean_value_region)
positivos_PIB<-full_join(y= pib_2022_desc ,x=positivos_sinPivotar,by=c('RegionCode'='pais')) %>%
dplyr::rename(PIB='2022') %>%
dplyr::rename(Animales=porcentaje_posit_animales, Personas = porcentaje_posit_personas)%>%
group_by(RegionCode) %>%
pivot_longer(.,names_to = "Variable", values_to = "Valores", cols = c(Personas:Animales)) %>%
mutate(Variable = factor(Variable, levels = c("Personas","Animales"))) %>%
filter(Valores!=0.00)
final<-ggplot(positivos_PIB,aes(x=PIB, y=Valores))+
geom_point(aes(color=factor(Variable)))+
geom_smooth(method = 'lm',aes(colour=factor(Variable)))+
labs(title = 'Relación entre PIB y resistencia antimicrobiana',
y='Positivos en AMR',
colour='Poblaciones de positivos')
final
